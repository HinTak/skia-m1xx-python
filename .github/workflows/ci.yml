name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, m120-public]
  release:
    types: [published]

jobs:

  build_wheels:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }}) for ${{ matrix.cp }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12]
        arch: [auto64]
        cp: ["cp3{7,8,9,10,11,12}"]
        include:
          - os: macos-12
            arch: arm64
            cp: "cp3{7,8,9,10,11,12}"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/cache/restore@v3
        if: runner.os == 'Linux' && matrix.arch == 'aarch64'
        with:
          path: |
            gn
            skia
          key: linux-aarch64-skia-${{ github.sha }}

      - name: Set up QEMU
        if: runner.os == 'Linux' && matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.arch }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: "${{ matrix.cp }}-*"
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_MACOS: TARGET_ARCH=${{ matrix.arch }}
          CIBW_BEFORE_ALL: bash scripts/build_${{ runner.os }}.sh
          CIBW_BEFORE_BUILD: pip install pybind11 numpy
          CIBW_TEST_REQUIRES: pytest pillow glfw
          CIBW_TEST_REQUIRES_MACOS: pytest pillow pyopengl
          CIBW_TEST_COMMAND: python -m pytest {project}/tests
          CIBW_TEST_COMMAND_LINUX: >
            xvfb-run -s "-screen 0 640x480x24" python -m pytest {project}/tests

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_docs:
    name: Build docs
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.8'

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Build docs
        run: |
          python -m pip install --pre -f dist skia-python
          python -m pip install sphinx==6.2.1 sphinx-rtd-theme
          python setup.py build_sphinx

      - name: Deploy docs
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html

  publish:
    name: Upload packages to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
